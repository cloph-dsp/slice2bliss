/**
 * Animation utilities for smooth transitions
 */

/* Fade in animation */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.animate-fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

/* Fade out animation */
@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.animate-fade-out {
  animation: fadeOut 0.3s ease-in-out;
}

/* Subtle pulse animation for active elements */
@keyframes subtlePulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

.animate-subtle-pulse {
  animation: subtlePulse 2.5s infinite ease-in-out;
}

/* Pop in animation */
@keyframes popIn {
  0% { transform: scale(0.9); opacity: 0; }
  70% { transform: scale(1.05); }
  100% { transform: scale(1); opacity: 1; }
}

.animate-pop-in {
  animation: popIn 0.3s ease-out;
}

/* Slide in from top */
@keyframes slideFromTop {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.animate-slide-from-top {
  animation: slideFromTop 0.3s ease-out;
}

/* Slide in from bottom */
@keyframes slideFromBottom {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.animate-slide-from-bottom {
  animation: slideFromBottom 0.3s ease-out;
}

/* Spin animation */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Shimmer loading effect */
@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

.animate-shimmer {
  background: linear-gradient(90deg, 
    rgba(255,255,255,0.03) 25%, 
    rgba(255,255,255,0.08) 50%, 
    rgba(255,255,255,0.03) 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

/* Scale transition */
.scale-transition {
  transition: transform 0.2s ease;
}

.scale-transition:active {
  transform: scale(0.97);
}

/* Layout animations */
.layout-shift {
  transition: all 0.3s ease-in-out;
}

/* Hover glow effect */
.hover-glow {
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 8px rgba(247, 220, 111, 0.5);
  transform: translateY(-1px);
}

/* Adjust animations for reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in,
  .animate-fade-out,
  .animate-subtle-pulse,
  .animate-pop-in,
  .animate-slide-from-top,
  .animate-slide-from-bottom,
  .animate-spin,
  .animate-shimmer {
    animation: none;
  }
  
  .scale-transition,
  .layout-shift,
  .hover-glow {
    transition: none;
  }
}

/* Animation styles */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 2px white, 0 0 5px 2px rgba(247, 220, 111, 0.5);
  }
  
  100% {
    box-shadow: 0 0 0 2px white, 0 0 10px 3px rgba(247, 220, 111, 0.8);
  }
}

@keyframes pulse-subtle {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.7;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes waveform-glow {
  0% {
    filter: drop-shadow(0 0 2px rgba(247, 220, 111, 0.5));
  }
  50% {
    filter: drop-shadow(0 0 5px rgba(247, 220, 111, 0.8));
  }
  100% {
    filter: drop-shadow(0 0 2px rgba(247, 220, 111, 0.5));
  }
}

/* Update existing waveformPulse animation */
@keyframes waveformPulse {
  0% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0.5;
  }
}

@keyframes playbackScanline {
  0% {
    left: -5%;
  }
  100% {
    left: 105%;
  }
}

.waveform-playing {
  animation: waveformPulse 1.2s infinite ease-in-out;
  opacity: 0.7; /* Base opacity higher than inactive state */
}

.playback-indicator {
  position: absolute;
  top: 0;
  left: -10%;
  width: 5px;
  height: 100%;
  background: rgba(255, 255, 255, 0.85);
  box-shadow: 0 0 10px 3px rgba(255, 255, 255, 0.8);
  z-index: 2;
  animation: playbackScanline var(--slice-duration, 1.5s) linear infinite;
  pointer-events: none;
}

/* Grid transition animations */
@keyframes gridEnter {
  from {
    opacity: 0;
    transform: translateY(10px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.grid-enter {
  animation: gridEnter 0.3s ease-out forwards;
}

/* Improved playback indicator animation based on slice count */
.slice-grid-container[data-slice-count^="1"] .playback-indicator,
.slice-grid-container[data-slice-count^="2"] .playback-indicator,
.slice-grid-container[data-slice-count^="3"] .playback-indicator {
  width: 4px;
  box-shadow: 0 0 8px 2px rgba(255, 255, 255, 0.7);
}

.slice-grid-container[data-slice-count^="4"] .playback-indicator,
.slice-grid-container[data-slice-count^="5"] .playback-indicator,
.slice-grid-container[data-slice-count^="6"] .playback-indicator {
  width: 3px;
  box-shadow: 0 0 6px 1px rgba(255, 255, 255, 0.7);
}

.slice-grid-container[data-slice-count^="7"] .playback-indicator,
.slice-grid-container[data-slice-count^="8"] .playback-indicator,
.slice-grid-container[data-slice-count^="9"] .playback-indicator {
  width: 2px;
  box-shadow: 0 0 4px 1px rgba(255, 255, 255, 0.7);
}

/* Customize waveform animations based on slice density */
@keyframes waveformDenseGlow {
  0% { filter: drop-shadow(0 0 1px rgba(247, 220, 111, 0.4)); }
  50% { filter: drop-shadow(0 0 3px rgba(247, 220, 111, 0.6)); }
  100% { filter: drop-shadow(0 0 1px rgba(247, 220, 111, 0.4)); }
}

.slice-grid-container[data-slice-count^="5"] .active-slice-animation .slice-waveform,
.slice-grid-container[data-slice-count^="6"] .active-slice-animation .slice-waveform,
.slice-grid-container[data-slice-count^="7"] .active-slice-animation .slice-waveform,
.slice-grid-container[data-slice-count^="8"] .active-slice-animation .slice-waveform,
.slice-grid-container[data-slice-count^="9"] .active-slice-animation .slice-waveform {
  animation: waveformDenseGlow 2s infinite ease-in-out;
  opacity: 0.85;
}
